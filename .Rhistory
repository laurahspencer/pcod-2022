immune.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=immune.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "6_low", "10_amb", "10_low")))
}
df1 <- bind_rows(immune.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=log(mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, log(counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
immune.genes.lines <- vector("list", length(immune.genes))
names(immune.genes.lines) <- immune.genes
for (i in 1:length(immune.genes)) {
immune.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=immune.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(immune.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=log(mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, log(counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS", stress=="Warm") %>% #
filter(grepl('Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=log(mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, log(counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
# # Line plots
# ggplot(aes(x=treatment, y=log(mean), group=gene_gadmor)) + geom_line(size=.01) +
# theme_minimal() +
# #scale_x_continuous(breaks=c(1,2,3), labels=c("Ambient", "Moderate", "Low")) +
# theme(axis.title.x = element_blank(), plot.title = element_text(size=10), axis.text.x = element_text(hjust = 0.2)) +
# xlab("Per treatment mean of normalized counts") + ggtitle("Abundances of DEGs by\ntreatment & relative expression")
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS", stress=="Warm") %>% #
filter(grepl('Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
df2
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb")
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=log(mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, log(counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=log(mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA)
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS", stress=="Warm") %>% #
filter(grepl('Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df1
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
df2
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, log(counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -1*log(-1*counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -log(-counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS") %>% #
filter(grepl('Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -log(-counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
# # Line plots
# ggplot(aes(x=treatment, y=log(mean), group=gene_gadmor)) + geom_line(size=.01) +
# theme_minimal() +
# #scale_x_continuous(breaks=c(1,2,3), labels=c("Ambient", "Moderate", "Low")) +
# theme(axis.title.x = element_blank(), plot.title = element_text(size=10), axis.text.x = element_text(hjust = 0.2)) +
# xlab("Per treatment mean of normalized counts") + ggtitle("Abundances of DEGs by\ntreatment & relative expression")
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS") %>% #
filter(grepl('Digestion', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -log(-counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
# # Line plots
# ggplot(aes(x=treatment, y=log(mean), group=gene_gadmor)) + geom_line(size=.01) +
# theme_minimal() +
# #scale_x_continuous(breaks=c(1,2,3), labels=c("Ambient", "Moderate", "Low")) +
# theme(axis.title.x = element_blank(), plot.title = element_text(size=10), axis.text.x = element_text(hjust = 0.2)) +
# xlab("Per treatment mean of normalized counts") + ggtitle("Abundances of DEGs by\ntreatment & relative expression")
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS", stress="OA") %>% #
filter(grepl('Digestion|Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS", stress=="OA") %>% #
filter(grepl('Digestion|Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -log(-counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
# # Line plots
# ggplot(aes(x=treatment, y=log(mean), group=gene_gadmor)) + geom_line(size=.01) +
# theme_minimal() +
# #scale_x_continuous(breaks=c(1,2,3), labels=c("Ambient", "Moderate", "Low")) +
# theme(axis.title.x = element_blank(), plot.title = element_text(size=10), axis.text.x = element_text(hjust = 0.2)) +
# xlab("Per treatment mean of normalized counts") + ggtitle("Abundances of DEGs by\ntreatment & relative expression")
lipid.spid <- (david %>% filter(p_value<0.05, category=="UP_KW_BIOLOGICAL_PROCESS") %>% #
filter(grepl('Lipid', process)))$genes %>% strsplit(., ",") %>% unlist() %>% as.vector() %>%
gsub(" ", "", .)
lipid.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% lipid.spid))$gene_gadmor #and only those related to immune functions
lipid.genes.lines <- vector("list", length(lipid.genes))
names(lipid.genes.lines) <- lipid.genes
for (i in 1:length(lipid.genes)) {
lipid.genes.lines[[i]] <-  plotCounts(dds.DESeq.treatment, gene=lipid.genes[i], intgroup=c("treatment"), replaced = TRUE, returnData = TRUE) %>%
rownames_to_column("sample") %>%
left_join(sample.info[,c("vial_label", "temperature", "ph", "tank", "treatment_tank")], by=c("sample"="vial_label")) %>%
filter(temperature!=3) %>%
mutate(treatment=fct_relevel(treatment, c("6_amb", "10_amb",  "10_low","6_low")))
}
df1 <- bind_rows(lipid.genes.lines, .id = "gene_gadmor") %>%
mutate(gene_gadmor=as.factor(gene_gadmor)) %>%
group_by(gene_gadmor, treatment) %>%
dplyr::summarize(mean=mean(count), median=median(count), sd=sd(count), cv=sd(count)/mean(count)) %>% ungroup()
df2 <- df1 %>% filter(treatment=="6_amb") %>% select(gene_gadmor, mean) %>% rename("mean"="control")
left_join(df1, df2) %>%
mutate(mean_diff=mean-control) %>% filter(treatment!="6_amb") %>%
group_by(gene_gadmor, treatment) %>%
# One boxplot, points for all genes
ggplot(aes(x=treatment, y=-1*log(-1*mean_diff), color=treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(size=2.5, position=position_jitter(w = 0.15,h = 0)) +
#geom_text(size=3.5, position=position_jitter(w = 0.15,h = 0)) +
theme_bw() + ylab("Δ from control, -log(-counts)") +
theme(axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5, size=10), legend.position = "none") +
scale_color_manual(name="Treatment", values=c("6_amb"="gray65", "6_low"=lighten("darkorange2", 0.25),
"10_amb"=lighten("firebrick4", 0.45),  "10_low"="firebrick4")) #+
# # Line plots
# ggplot(aes(x=treatment, y=log(mean), group=gene_gadmor)) + geom_line(size=.01) +
# theme_minimal() +
# #scale_x_continuous(breaks=c(1,2,3), labels=c("Ambient", "Moderate", "Low")) +
# theme(axis.title.x = element_blank(), plot.title = element_text(size=10), axis.text.x = element_text(hjust = 0.2)) +
# xlab("Per treatment mean of normalized counts") + ggtitle("Abundances of DEGs by\ntreatment & relative expression")
david %>%
filter(p_value<0.05) %>%
filter(category=="UP_KW_BIOLOGICAL_PROCESS") %>%
group_by(stress, response, genes, count) %>%
dplyr::summarise(p_value=min(p_value)) %>% distinct() %>% ungroup() %>% #for rows with duplicate grouping variabes, select one with lowest p-value
left_join(david %>%
dplyr::select(stress, response, category, term, process, count, percent, p_value, fold_enrichment, fdr, genes),
by = c("stress", "response", "genes", "p_value", "count")) %>%  #re-add data
filter(response=="Downregulated") %>%
ungroup() %>% arrange(stress, p_value) %>%
mutate(process = factor(process, rev(unique(process)), ordered = TRUE)) %>%
filter(stress %!in% c("Cold", "Cold-OA")) %>%
mutate(stress = factor(stress, c("Warm", "Warm-OA", "OA"), ordered = TRUE)) %>%
ggplot(aes(y = process, x=stress, col=stress)) +
geom_point(alpha=0.65, aes(size=-log10(p_value))) + #size=count,  alpha=p_value,
facet_wrap(~category,scales="free", nrow = 2) +
scale_color_manual(name="Stressor",
values=c("OA"=lighten("darkorange2", 0.25),
"Warm"=lighten("firebrick4", 0.45),
"Warm-OA"="firebrick4"),
guide = guide_legend(override.aes = list(size=4))) +
scale_size("-Log10 P-value", range = c(2,8), #breaks = c(2, 5, 10),
guide = guide_legend(override.aes = list(col="gray50"))) +
scale_x_discrete(drop=T) + #Do drop empty factors for temperature contrasts
theme_cleveland() +
theme(
#legend.position = "none",
axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(size=7.25),
plot.title = element_text(size=8),
legend.text=element_text(size=6),
legend.title = element_text(size=6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
ggtitle("Downregulated Biological Processes")
david %>%
filter(p_value<0.05) %>%
filter(category=="UP_KW_BIOLOGICAL_PROCESS") %>%
group_by(stress, response, genes, count) %>%
dplyr::summarise(p_value=min(p_value)) %>% distinct() %>% ungroup() %>% #for rows with duplicate grouping variabes, select one with lowest p-value
left_join(david %>%
dplyr::select(stress, response, category, term, process, count, percent, p_value, fold_enrichment, fdr, genes),
by = c("stress", "response", "genes", "p_value", "count")) %>%  #re-add data
filter(response=="Downregulated") %>%
ungroup() %>% arrange(stress, p_value) %>%
mutate(process = factor(process, rev(unique(process)), ordered = TRUE)) %>%
filter(stress %!in% c("Cold", "Cold-OA")) %>%
mutate(stress = factor(stress, c("Warm", "Warm-OA", "OA"), ordered = TRUE)) %>%
ggplot(aes(y = process, x=stress, col=stress)) +
geom_point(alpha=0.65, aes(size=-log10(p_value))) + #size=count,  alpha=p_value,
facet_wrap(~category,scales="free", nrow = 2) +
scale_color_manual(name="Stressor",
values=c("OA"=lighten("darkorange2", 0.25),
"Warm"=lighten("firebrick4", 0.45),
"Warm-OA"="firebrick4"),
guide = guide_legend(order = 1, override.aes = list(size=4))) +
scale_size("-Log10 P-value", range = c(2,8), #breaks = c(2, 5, 10),
guide = guide_legend(override.aes = list(col="gray50"))) +
scale_x_discrete(drop=T) + #Do drop empty factors for temperature contrasts
theme_cleveland() +
theme(
#legend.position = "none",
axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y=element_text(size=7.25),
plot.title = element_text(size=8),
legend.text=element_text(size=6),
legend.title = element_text(size=6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
ggtitle("Downregulated Biological Processes")
immune.genes <- (counts.annot.gadmor %>% filter(gene_gadmor %in% degs.unique) %>% #use only genes that were DEGs
filter(spid %in% immune.spid))$gene_gadmor #and only those related to immune functions
# Generate heat map / cluster lipid related genes
#pdf(file="../results/deseq2/heatmap-lipids.pdf", height = 5, width = 7.25)
cluster.most.variable <- pheatmap(t(assay(vsd.treatment))[sample.order,immune.genes],
Rowv=NA, Colv=NA, na.rm = TRUE, xlab = NA, scale="column",
show_colnames =TRUE, show_rownames = FALSE,
border_color = NA,
fontsize_col=6.5, fontsize = 8,
cluster_cols = TRUE, cluster_rows = F,
annotation_colors = list(treatment=
c("Control"="gray65",
"Acidification"=lighten("darkorange2", 0.25),
"Warming"=lighten("firebrick4", 0.45),
"Warming + Acidification"="firebrick4",
"Cooling"=lighten("navyblue", 0.45),
"Cooling + Acidification"="navyblue")),
annotation_row=as.data.frame(colData(vsd.treatment)[sample.order,c("treatment"), drop=FALSE]) %>%
mutate(treatment=case_when(
treatment == "6_amb" ~ "Control",
treatment == "6_low" ~ "Acidification",
treatment == "10_amb" ~ "Warming",
treatment == "10_low" ~ "Warming + Acidification",
treatment == "3_amb" ~ "Cooling",
treatment == "3_low" ~ "Cooling + Acidification")),
main = "Immune function gene counts")
immune.tree <- pheatmap(t(assay(vsd.treatment))[,immune.genes],
Rowv=NA, Colv=NA, na.rm = TRUE, xlab = NA, scale="column",
cluster_cols = TRUE, cluster_rows = TRUE, silent = TRUE)
plot(immune.tree$tree_col)
abline(h=11.8, col="red", lty=2, lwd=2)
rbind(t(assay(vsd.treatment))[,immune.genes],
cluster = cutree(immune.tree$tree_col, k = 2))
rbind(t(assay(vsd.treatment))[,immune.genes],
cluster = cutree(immune.tree$tree_col, k = 2))
rbind(t(assay(vsd.treatment))[,immune.genes],
cluster = cutree(immune.tree$tree_col, k = 2)) %>%
as.data.frame() %>% tail() %>%
t() %>% as.data.frame() %>% select(cluster) %>%
rownames_to_column("gene_gadmor") %>%
left_join(counts.annot.gadmor[c("gene_gadmor", "gene_uni", "spid", "evalue", "protein_names")],
by = "gene_gadmor") %>%
left_join(gadMor.blast.GO %>%
select(spid, gene_ontology_biological_process,
gene_ontology_cellular_component, gene_ontology_molecular_function, gene_ontology_i_ds)) %>%
mutate(cluster=as.factor(cluster)) %>%
# Filter for clusters in tree
#filter(cluster %in% c(2)) %>%
# # To save Uniprot SPID to clipboard
# select(spid) %>% na.omit() %>% unlist() %>% as.vector() %>%
# write_clip()
# Generate wordcloud from GO terms
select(gene_ontology_biological_process) %>%
#select(gene_ontology_cellular_component) %>%
na.omit() %>% unlist() %>% as.vector() %>%
gsub("\\[[^\\]]*\\]", "", ., perl=TRUE) %>%
gsub("process", "", ., perl=TRUE) %>% #get rid of word "process" since it's in everything
wordcloud(min.freq = 5, random.order = F, random.color = F, colors = brewer.pal(2, "Dark2"))
require(tidyverse)
require(eulerr)
require(wordcloud2)
require(wordcloud2)
install.packages("wordcloud2")
require(wordcloud2)
rbind(t(assay(vsd.treatment))[,immune.genes],
cluster = cutree(immune.tree$tree_col, k = 2)) %>%
as.data.frame() %>% tail() %>%
t() %>% as.data.frame() %>% select(cluster) %>%
rownames_to_column("gene_gadmor") %>%
left_join(counts.annot.gadmor[c("gene_gadmor", "gene_uni", "spid", "evalue", "protein_names")],
by = "gene_gadmor") %>%
left_join(gadMor.blast.GO %>%
select(spid, gene_ontology_biological_process,
gene_ontology_cellular_component, gene_ontology_molecular_function, gene_ontology_i_ds)) %>%
mutate(cluster=as.factor(cluster)) %>%
# Filter for clusters in tree
#filter(cluster %in% c(2)) %>%
# # To save Uniprot SPID to clipboard
# select(spid) %>% na.omit() %>% unlist() %>% as.vector() %>%
# write_clip()
# Generate wordcloud from GO terms
select(gene_ontology_biological_process) %>%
#select(gene_ontology_cellular_component) %>%
na.omit() %>% unlist() %>% as.vector() %>%
gsub("\\[[^\\]]*\\]", "", ., perl=TRUE) %>%
gsub("process", "", ., perl=TRUE) %>% #get rid of word "process" since it's in everything
wordcloud(min.freq = 5, random.order = F, random.color = F, colors = brewer.pal(2, "Dark2"))
install.packages("htmltools")
install.packages("htmltools")
detach("package:htmltools", unload=TRUE)
unloadNamespace("htmltools")
install.packages("htmltools")
install.packages("htmltools")
require(wordcloud2)
